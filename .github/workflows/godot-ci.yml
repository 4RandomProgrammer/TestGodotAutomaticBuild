name: "godot-ci export"
on: push

env:
  GODOT_VERSION: 4.2.1
  EXPORT_NAME: test-project
  PROJECT_PATH: test-project
  VERSION_FILE: project.godot
  VERSION_REGEX: config\/version=\"\K[0-9.\-A-z]*


jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          godot --headless --verbose --export-release "Windows Desktop" ../build/windows/$EXPORT_NAME.exe

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows
          path: build/windows

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: windows
          path: build/windows

  export-linux:
    name: Linux Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          godot --headless --verbose --export-release "Linux/X11" ../build/linux/$EXPORT_NAME.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: linux
          path: build/linux

      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: linux
          path: build/linux
          
  # generate-release:
  #   needs: [export-linux, export-windows]
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout current branch
  #       uses: actions/checkout@v3

  #     - name: Extract version
  #       uses: CapsCollective/version-actions/extract-version@v1.0
  #       with:
  #         version-file: ${{ env.VERSION_FILE }}
  #         version-regex: ${{ env.VERSION_REGEX }}
  #       id: extract-version
      
      

      

      # - name: Tag and upload artifacts to release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     tag: ${{ steps.extract-version.outputs.version-string }}
      #     commit: ${{ github.sha }}
      #     allowUpdates: false
      #     artifactErrorsFailBuild: true
      #     prerelease: true
      #     artifacts: artifacts/*/*