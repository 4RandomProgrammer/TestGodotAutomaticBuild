name: Setup mono
description: Setup mono builds and mono base class libraries.
inputs:
  mono-release: 
    description: The release file to download.
    default: ""
  mono-bcl:
    description: The release bcl file to download.
    default: ""
  mono-installs-path:
    description: Path to dump the mono-release into.
    default: $HOME/mono-installs
  mono-bcl-path:
    description: Path to dump the mono-bcl into.
    default: $HOME/mono-bcls
    
runs:
  using: "composite"
  steps:
    - name: Download mono release ${{ inputs.mono-release }}
      if: ${{ inputs.mono-release != '' }}
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: "${{ env.GODOT_MONO_BUILD_REPO }}"
        version: "tags/${{ env.GODOT_MONO_BUILD_TAG }}"
        file: "${{ inputs.mono-release }}.zip"
    
    - name: Extract mono release
      if: ${{ inputs.mono-release != '' }}
      shell: bash
      run: | 
        7z x "${{ inputs.mono-release }}.zip" -o${{ inputs.mono-installs-path }}

    - name: Download mono base class library ${{ inputs.mono-bcl }}
      if: ${{ inputs.mono-bcl != '' }}
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: "${{ env.GODOT_MONO_BUILD_REPO }}"
        version: "tags/${{ env.GODOT_MONO_BUILD_TAG }}"
        file: "${{ inputs.mono-bcl }}.zip"
    
    - name: Extract mono base class library
      if: ${{ inputs.mono-bcl != '' }}
      shell: bash
      run: |
        mkdir -p ${{ inputs.mono-bcl-path }}
        7z x "${{ inputs.mono-bcl }}.zip" -otemp
        pushd temp
        dirs=(*/)
        echo "Found directory: ${dirs[0]}"
        mv -v ${dirs[0]}* ${{ inputs.mono-bcl-path }}
        popd
        rm -r temp
